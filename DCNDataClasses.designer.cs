#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPF_DCupNote
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dcupnoteDatabase")]
	public partial class DCNDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertdCupnote(dCupnote instance);
    partial void UpdatedCupnote(dCupnote instance);
    partial void DeletedCupnote(dCupnote instance);
    partial void InsertLineTag(LineTag instance);
    partial void UpdateLineTag(LineTag instance);
    partial void DeleteLineTag(LineTag instance);
    partial void InsertEllipseTag(EllipseTag instance);
    partial void UpdateEllipseTag(EllipseTag instance);
    partial void DeleteEllipseTag(EllipseTag instance);
    partial void InsertRectangleTag(RectangleTag instance);
    partial void UpdateRectangleTag(RectangleTag instance);
    partial void DeleteRectangleTag(RectangleTag instance);
    #endregion
		
		public DCNDataClassesDataContext() : 
				base(global::WPF_DCupNote.Properties.Settings.Default.dcupnoteDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCNDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCNDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCNDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCNDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<dCupnote> dCupnotes
		{
			get
			{
				return this.GetTable<dCupnote>();
			}
		}
		
		public System.Data.Linq.Table<LineTag> LineTags
		{
			get
			{
				return this.GetTable<LineTag>();
			}
		}
		
		public System.Data.Linq.Table<EllipseTag> EllipseTags
		{
			get
			{
				return this.GetTable<EllipseTag>();
			}
		}
		
		public System.Data.Linq.Table<RectangleTag> RectangleTags
		{
			get
			{
				return this.GetTable<RectangleTag>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dCupnote")]
	public partial class dCupnote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_DCN;
		
		private string _Title;
		
		private string _Note_DCN;
		
		private System.Data.Linq.Binary _Image;
		
		private EntitySet<LineTag> _LineTags;
		
		private EntitySet<EllipseTag> _EllipseTags;
		
		private EntitySet<RectangleTag> _RectangleTags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DCNChanging(string value);
    partial void OnID_DCNChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNote_DCNChanging(string value);
    partial void OnNote_DCNChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    #endregion
		
		public dCupnote()
		{
			this._LineTags = new EntitySet<LineTag>(new Action<LineTag>(this.attach_LineTags), new Action<LineTag>(this.detach_LineTags));
			this._EllipseTags = new EntitySet<EllipseTag>(new Action<EllipseTag>(this.attach_EllipseTags), new Action<EllipseTag>(this.detach_EllipseTags));
			this._RectangleTags = new EntitySet<RectangleTag>(new Action<RectangleTag>(this.attach_RectangleTags), new Action<RectangleTag>(this.detach_RectangleTags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DCN", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_DCN
		{
			get
			{
				return this._ID_DCN;
			}
			set
			{
				if ((this._ID_DCN != value))
				{
					this.OnID_DCNChanging(value);
					this.SendPropertyChanging();
					this._ID_DCN = value;
					this.SendPropertyChanged("ID_DCN");
					this.OnID_DCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note_DCN", DbType="NVarChar(MAX)")]
		public string Note_DCN
		{
			get
			{
				return this._Note_DCN;
			}
			set
			{
				if ((this._Note_DCN != value))
				{
					this.OnNote_DCNChanging(value);
					this.SendPropertyChanging();
					this._Note_DCN = value;
					this.SendPropertyChanged("Note_DCN");
					this.OnNote_DCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dCupnote_LineTag", Storage="_LineTags", ThisKey="ID_DCN", OtherKey="ID_DCN")]
		public EntitySet<LineTag> LineTags
		{
			get
			{
				return this._LineTags;
			}
			set
			{
				this._LineTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dCupnote_EllipseTag", Storage="_EllipseTags", ThisKey="ID_DCN", OtherKey="ID_DCN")]
		public EntitySet<EllipseTag> EllipseTags
		{
			get
			{
				return this._EllipseTags;
			}
			set
			{
				this._EllipseTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dCupnote_RectangleTag", Storage="_RectangleTags", ThisKey="ID_DCN", OtherKey="ID_DCN")]
		public EntitySet<RectangleTag> RectangleTags
		{
			get
			{
				return this._RectangleTags;
			}
			set
			{
				this._RectangleTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LineTags(LineTag entity)
		{
			this.SendPropertyChanging();
			entity.dCupnote = this;
		}
		
		private void detach_LineTags(LineTag entity)
		{
			this.SendPropertyChanging();
			entity.dCupnote = null;
		}
		
		private void attach_EllipseTags(EllipseTag entity)
		{
			this.SendPropertyChanging();
			entity.dCupnote = this;
		}
		
		private void detach_EllipseTags(EllipseTag entity)
		{
			this.SendPropertyChanging();
			entity.dCupnote = null;
		}
		
		private void attach_RectangleTags(RectangleTag entity)
		{
			this.SendPropertyChanging();
			entity.dCupnote = this;
		}
		
		private void detach_RectangleTags(RectangleTag entity)
		{
			this.SendPropertyChanging();
			entity.dCupnote = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LineTag")]
	public partial class LineTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_LT;
		
		private string _ID_DCN;
		
		private string _Note_LT;
		
		private int _counter_LT;
		
		private double _x1_LT;
		
		private double _y1_LT;
		
		private double _x2_LT;
		
		private double _y2_LT;
		
		private int _thickness_LT;
		
		private string _color_LT;
		
		private double _connector_x1_LT;
		
		private double _connector_y1_LT;
		
		private double _connector_x2_LT;
		
		private double _connector_y2_LT;
		
		private bool _connector_hidden_LT;
		
		private bool _line_hidden;
		
		private EntityRef<dCupnote> _dCupnote;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LTChanging(string value);
    partial void OnID_LTChanged();
    partial void OnID_DCNChanging(string value);
    partial void OnID_DCNChanged();
    partial void OnNote_LTChanging(string value);
    partial void OnNote_LTChanged();
    partial void Oncounter_LTChanging(int value);
    partial void Oncounter_LTChanged();
    partial void Onx1_LTChanging(double value);
    partial void Onx1_LTChanged();
    partial void Ony1_LTChanging(double value);
    partial void Ony1_LTChanged();
    partial void Onx2_LTChanging(double value);
    partial void Onx2_LTChanged();
    partial void Ony2_LTChanging(double value);
    partial void Ony2_LTChanged();
    partial void Onthickness_LTChanging(int value);
    partial void Onthickness_LTChanged();
    partial void Oncolor_LTChanging(string value);
    partial void Oncolor_LTChanged();
    partial void Onconnector_x1_LTChanging(double value);
    partial void Onconnector_x1_LTChanged();
    partial void Onconnector_y1_LTChanging(double value);
    partial void Onconnector_y1_LTChanged();
    partial void Onconnector_x2_LTChanging(double value);
    partial void Onconnector_x2_LTChanged();
    partial void Onconnector_y2_LTChanging(double value);
    partial void Onconnector_y2_LTChanged();
    partial void Onconnector_hidden_LTChanging(bool value);
    partial void Onconnector_hidden_LTChanged();
    partial void Online_hiddenChanging(bool value);
    partial void Online_hiddenChanged();
    #endregion
		
		public LineTag()
		{
			this._dCupnote = default(EntityRef<dCupnote>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LT", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_LT
		{
			get
			{
				return this._ID_LT;
			}
			set
			{
				if ((this._ID_LT != value))
				{
					this.OnID_LTChanging(value);
					this.SendPropertyChanging();
					this._ID_LT = value;
					this.SendPropertyChanged("ID_LT");
					this.OnID_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DCN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_DCN
		{
			get
			{
				return this._ID_DCN;
			}
			set
			{
				if ((this._ID_DCN != value))
				{
					if (this._dCupnote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DCNChanging(value);
					this.SendPropertyChanging();
					this._ID_DCN = value;
					this.SendPropertyChanged("ID_DCN");
					this.OnID_DCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note_LT", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Note_LT
		{
			get
			{
				return this._Note_LT;
			}
			set
			{
				if ((this._Note_LT != value))
				{
					this.OnNote_LTChanging(value);
					this.SendPropertyChanging();
					this._Note_LT = value;
					this.SendPropertyChanged("Note_LT");
					this.OnNote_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counter_LT", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int counter_LT
		{
			get
			{
				return this._counter_LT;
			}
			set
			{
				if ((this._counter_LT != value))
				{
					this.Oncounter_LTChanging(value);
					this.SendPropertyChanging();
					this._counter_LT = value;
					this.SendPropertyChanged("counter_LT");
					this.Oncounter_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x1_LT", DbType="Float NOT NULL")]
		public double x1_LT
		{
			get
			{
				return this._x1_LT;
			}
			set
			{
				if ((this._x1_LT != value))
				{
					this.Onx1_LTChanging(value);
					this.SendPropertyChanging();
					this._x1_LT = value;
					this.SendPropertyChanged("x1_LT");
					this.Onx1_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y1_LT", DbType="Float NOT NULL")]
		public double y1_LT
		{
			get
			{
				return this._y1_LT;
			}
			set
			{
				if ((this._y1_LT != value))
				{
					this.Ony1_LTChanging(value);
					this.SendPropertyChanging();
					this._y1_LT = value;
					this.SendPropertyChanged("y1_LT");
					this.Ony1_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x2_LT", DbType="Float NOT NULL")]
		public double x2_LT
		{
			get
			{
				return this._x2_LT;
			}
			set
			{
				if ((this._x2_LT != value))
				{
					this.Onx2_LTChanging(value);
					this.SendPropertyChanging();
					this._x2_LT = value;
					this.SendPropertyChanged("x2_LT");
					this.Onx2_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y2_LT", DbType="Float NOT NULL")]
		public double y2_LT
		{
			get
			{
				return this._y2_LT;
			}
			set
			{
				if ((this._y2_LT != value))
				{
					this.Ony2_LTChanging(value);
					this.SendPropertyChanging();
					this._y2_LT = value;
					this.SendPropertyChanged("y2_LT");
					this.Ony2_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thickness_LT", DbType="Int NOT NULL")]
		public int thickness_LT
		{
			get
			{
				return this._thickness_LT;
			}
			set
			{
				if ((this._thickness_LT != value))
				{
					this.Onthickness_LTChanging(value);
					this.SendPropertyChanging();
					this._thickness_LT = value;
					this.SendPropertyChanged("thickness_LT");
					this.Onthickness_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_LT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string color_LT
		{
			get
			{
				return this._color_LT;
			}
			set
			{
				if ((this._color_LT != value))
				{
					this.Oncolor_LTChanging(value);
					this.SendPropertyChanging();
					this._color_LT = value;
					this.SendPropertyChanged("color_LT");
					this.Oncolor_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_x1_LT", DbType="Float NOT NULL")]
		public double connector_x1_LT
		{
			get
			{
				return this._connector_x1_LT;
			}
			set
			{
				if ((this._connector_x1_LT != value))
				{
					this.Onconnector_x1_LTChanging(value);
					this.SendPropertyChanging();
					this._connector_x1_LT = value;
					this.SendPropertyChanged("connector_x1_LT");
					this.Onconnector_x1_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_y1_LT", DbType="Float NOT NULL")]
		public double connector_y1_LT
		{
			get
			{
				return this._connector_y1_LT;
			}
			set
			{
				if ((this._connector_y1_LT != value))
				{
					this.Onconnector_y1_LTChanging(value);
					this.SendPropertyChanging();
					this._connector_y1_LT = value;
					this.SendPropertyChanged("connector_y1_LT");
					this.Onconnector_y1_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_x2_LT", DbType="Float NOT NULL")]
		public double connector_x2_LT
		{
			get
			{
				return this._connector_x2_LT;
			}
			set
			{
				if ((this._connector_x2_LT != value))
				{
					this.Onconnector_x2_LTChanging(value);
					this.SendPropertyChanging();
					this._connector_x2_LT = value;
					this.SendPropertyChanged("connector_x2_LT");
					this.Onconnector_x2_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_y2_LT", DbType="Float NOT NULL")]
		public double connector_y2_LT
		{
			get
			{
				return this._connector_y2_LT;
			}
			set
			{
				if ((this._connector_y2_LT != value))
				{
					this.Onconnector_y2_LTChanging(value);
					this.SendPropertyChanging();
					this._connector_y2_LT = value;
					this.SendPropertyChanged("connector_y2_LT");
					this.Onconnector_y2_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_hidden_LT", DbType="Bit NOT NULL")]
		public bool connector_hidden_LT
		{
			get
			{
				return this._connector_hidden_LT;
			}
			set
			{
				if ((this._connector_hidden_LT != value))
				{
					this.Onconnector_hidden_LTChanging(value);
					this.SendPropertyChanging();
					this._connector_hidden_LT = value;
					this.SendPropertyChanged("connector_hidden_LT");
					this.Onconnector_hidden_LTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line_hidden", DbType="Bit NOT NULL")]
		public bool line_hidden
		{
			get
			{
				return this._line_hidden;
			}
			set
			{
				if ((this._line_hidden != value))
				{
					this.Online_hiddenChanging(value);
					this.SendPropertyChanging();
					this._line_hidden = value;
					this.SendPropertyChanged("line_hidden");
					this.Online_hiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dCupnote_LineTag", Storage="_dCupnote", ThisKey="ID_DCN", OtherKey="ID_DCN", IsForeignKey=true)]
		public dCupnote dCupnote
		{
			get
			{
				return this._dCupnote.Entity;
			}
			set
			{
				dCupnote previousValue = this._dCupnote.Entity;
				if (((previousValue != value) 
							|| (this._dCupnote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dCupnote.Entity = null;
						previousValue.LineTags.Remove(this);
					}
					this._dCupnote.Entity = value;
					if ((value != null))
					{
						value.LineTags.Add(this);
						this._ID_DCN = value.ID_DCN;
					}
					else
					{
						this._ID_DCN = default(string);
					}
					this.SendPropertyChanged("dCupnote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EllipseTag")]
	public partial class EllipseTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_ET;
		
		private string _ID_DCN;
		
		private string _Note_ET;
		
		private int _counter_ET;
		
		private double _x_ET;
		
		private double _y_ET;
		
		private int _wight_ET;
		
		private int _height_ET;
		
		private int _thickness_ET;
		
		private string _color_ET;
		
		private double _connector_x1_ET;
		
		private double _connector_y1_ET;
		
		private double _connector_x2_ET;
		
		private double _connector_y2_ET;
		
		private bool _connector_hidden_ET;
		
		private bool _ellipse_hidden;
		
		private EntityRef<dCupnote> _dCupnote;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ETChanging(string value);
    partial void OnID_ETChanged();
    partial void OnID_DCNChanging(string value);
    partial void OnID_DCNChanged();
    partial void OnNote_ETChanging(string value);
    partial void OnNote_ETChanged();
    partial void Oncounter_ETChanging(int value);
    partial void Oncounter_ETChanged();
    partial void Onx_ETChanging(double value);
    partial void Onx_ETChanged();
    partial void Ony_ETChanging(double value);
    partial void Ony_ETChanged();
    partial void Onwight_ETChanging(int value);
    partial void Onwight_ETChanged();
    partial void Onheight_ETChanging(int value);
    partial void Onheight_ETChanged();
    partial void Onthickness_ETChanging(int value);
    partial void Onthickness_ETChanged();
    partial void Oncolor_ETChanging(string value);
    partial void Oncolor_ETChanged();
    partial void Onconnector_x1_ETChanging(double value);
    partial void Onconnector_x1_ETChanged();
    partial void Onconnector_y1_ETChanging(double value);
    partial void Onconnector_y1_ETChanged();
    partial void Onconnector_x2_ETChanging(double value);
    partial void Onconnector_x2_ETChanged();
    partial void Onconnector_y2_ETChanging(double value);
    partial void Onconnector_y2_ETChanged();
    partial void Onconnector_hidden_ETChanging(bool value);
    partial void Onconnector_hidden_ETChanged();
    partial void Onellipse_hiddenChanging(bool value);
    partial void Onellipse_hiddenChanged();
    #endregion
		
		public EllipseTag()
		{
			this._dCupnote = default(EntityRef<dCupnote>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ET", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_ET
		{
			get
			{
				return this._ID_ET;
			}
			set
			{
				if ((this._ID_ET != value))
				{
					this.OnID_ETChanging(value);
					this.SendPropertyChanging();
					this._ID_ET = value;
					this.SendPropertyChanged("ID_ET");
					this.OnID_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DCN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_DCN
		{
			get
			{
				return this._ID_DCN;
			}
			set
			{
				if ((this._ID_DCN != value))
				{
					if (this._dCupnote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DCNChanging(value);
					this.SendPropertyChanging();
					this._ID_DCN = value;
					this.SendPropertyChanged("ID_DCN");
					this.OnID_DCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note_ET", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Note_ET
		{
			get
			{
				return this._Note_ET;
			}
			set
			{
				if ((this._Note_ET != value))
				{
					this.OnNote_ETChanging(value);
					this.SendPropertyChanging();
					this._Note_ET = value;
					this.SendPropertyChanged("Note_ET");
					this.OnNote_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counter_ET", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int counter_ET
		{
			get
			{
				return this._counter_ET;
			}
			set
			{
				if ((this._counter_ET != value))
				{
					this.Oncounter_ETChanging(value);
					this.SendPropertyChanging();
					this._counter_ET = value;
					this.SendPropertyChanged("counter_ET");
					this.Oncounter_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x_ET", DbType="Float NOT NULL")]
		public double x_ET
		{
			get
			{
				return this._x_ET;
			}
			set
			{
				if ((this._x_ET != value))
				{
					this.Onx_ETChanging(value);
					this.SendPropertyChanging();
					this._x_ET = value;
					this.SendPropertyChanged("x_ET");
					this.Onx_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y_ET", DbType="Float NOT NULL")]
		public double y_ET
		{
			get
			{
				return this._y_ET;
			}
			set
			{
				if ((this._y_ET != value))
				{
					this.Ony_ETChanging(value);
					this.SendPropertyChanging();
					this._y_ET = value;
					this.SendPropertyChanged("y_ET");
					this.Ony_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wight_ET", DbType="Int NOT NULL")]
		public int wight_ET
		{
			get
			{
				return this._wight_ET;
			}
			set
			{
				if ((this._wight_ET != value))
				{
					this.Onwight_ETChanging(value);
					this.SendPropertyChanging();
					this._wight_ET = value;
					this.SendPropertyChanged("wight_ET");
					this.Onwight_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height_ET", DbType="Int NOT NULL")]
		public int height_ET
		{
			get
			{
				return this._height_ET;
			}
			set
			{
				if ((this._height_ET != value))
				{
					this.Onheight_ETChanging(value);
					this.SendPropertyChanging();
					this._height_ET = value;
					this.SendPropertyChanged("height_ET");
					this.Onheight_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thickness_ET", DbType="Int NOT NULL")]
		public int thickness_ET
		{
			get
			{
				return this._thickness_ET;
			}
			set
			{
				if ((this._thickness_ET != value))
				{
					this.Onthickness_ETChanging(value);
					this.SendPropertyChanging();
					this._thickness_ET = value;
					this.SendPropertyChanged("thickness_ET");
					this.Onthickness_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_ET", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string color_ET
		{
			get
			{
				return this._color_ET;
			}
			set
			{
				if ((this._color_ET != value))
				{
					this.Oncolor_ETChanging(value);
					this.SendPropertyChanging();
					this._color_ET = value;
					this.SendPropertyChanged("color_ET");
					this.Oncolor_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_x1_ET", DbType="Float NOT NULL")]
		public double connector_x1_ET
		{
			get
			{
				return this._connector_x1_ET;
			}
			set
			{
				if ((this._connector_x1_ET != value))
				{
					this.Onconnector_x1_ETChanging(value);
					this.SendPropertyChanging();
					this._connector_x1_ET = value;
					this.SendPropertyChanged("connector_x1_ET");
					this.Onconnector_x1_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_y1_ET", DbType="Float NOT NULL")]
		public double connector_y1_ET
		{
			get
			{
				return this._connector_y1_ET;
			}
			set
			{
				if ((this._connector_y1_ET != value))
				{
					this.Onconnector_y1_ETChanging(value);
					this.SendPropertyChanging();
					this._connector_y1_ET = value;
					this.SendPropertyChanged("connector_y1_ET");
					this.Onconnector_y1_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_x2_ET", DbType="Float NOT NULL")]
		public double connector_x2_ET
		{
			get
			{
				return this._connector_x2_ET;
			}
			set
			{
				if ((this._connector_x2_ET != value))
				{
					this.Onconnector_x2_ETChanging(value);
					this.SendPropertyChanging();
					this._connector_x2_ET = value;
					this.SendPropertyChanged("connector_x2_ET");
					this.Onconnector_x2_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_y2_ET", DbType="Float NOT NULL")]
		public double connector_y2_ET
		{
			get
			{
				return this._connector_y2_ET;
			}
			set
			{
				if ((this._connector_y2_ET != value))
				{
					this.Onconnector_y2_ETChanging(value);
					this.SendPropertyChanging();
					this._connector_y2_ET = value;
					this.SendPropertyChanged("connector_y2_ET");
					this.Onconnector_y2_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_hidden_ET", DbType="Bit NOT NULL")]
		public bool connector_hidden_ET
		{
			get
			{
				return this._connector_hidden_ET;
			}
			set
			{
				if ((this._connector_hidden_ET != value))
				{
					this.Onconnector_hidden_ETChanging(value);
					this.SendPropertyChanging();
					this._connector_hidden_ET = value;
					this.SendPropertyChanged("connector_hidden_ET");
					this.Onconnector_hidden_ETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ellipse_hidden", DbType="Bit NOT NULL")]
		public bool ellipse_hidden
		{
			get
			{
				return this._ellipse_hidden;
			}
			set
			{
				if ((this._ellipse_hidden != value))
				{
					this.Onellipse_hiddenChanging(value);
					this.SendPropertyChanging();
					this._ellipse_hidden = value;
					this.SendPropertyChanged("ellipse_hidden");
					this.Onellipse_hiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dCupnote_EllipseTag", Storage="_dCupnote", ThisKey="ID_DCN", OtherKey="ID_DCN", IsForeignKey=true)]
		public dCupnote dCupnote
		{
			get
			{
				return this._dCupnote.Entity;
			}
			set
			{
				dCupnote previousValue = this._dCupnote.Entity;
				if (((previousValue != value) 
							|| (this._dCupnote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dCupnote.Entity = null;
						previousValue.EllipseTags.Remove(this);
					}
					this._dCupnote.Entity = value;
					if ((value != null))
					{
						value.EllipseTags.Add(this);
						this._ID_DCN = value.ID_DCN;
					}
					else
					{
						this._ID_DCN = default(string);
					}
					this.SendPropertyChanged("dCupnote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RectangleTag")]
	public partial class RectangleTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_RT;
		
		private string _ID_DCN;
		
		private string _Note_RT;
		
		private int _counter_RT;
		
		private double _x1_RT;
		
		private double _y1_RT;
		
		private double _x2_RT;
		
		private double _y2_RT;
		
		private int _thickness_RT;
		
		private string _color_RT;
		
		private double _connector_x1_RT;
		
		private double _connector_y1_RT;
		
		private double _connector_x2_RT;
		
		private double _connector_y2_RT;
		
		private bool _connector_hidden_RT;
		
		private bool _rectangle_hidden;
		
		private EntityRef<dCupnote> _dCupnote;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RTChanging(string value);
    partial void OnID_RTChanged();
    partial void OnID_DCNChanging(string value);
    partial void OnID_DCNChanged();
    partial void OnNote_RTChanging(string value);
    partial void OnNote_RTChanged();
    partial void Oncounter_RTChanging(int value);
    partial void Oncounter_RTChanged();
    partial void Onx1_RTChanging(double value);
    partial void Onx1_RTChanged();
    partial void Ony1_RTChanging(double value);
    partial void Ony1_RTChanged();
    partial void Onx2_RTChanging(double value);
    partial void Onx2_RTChanged();
    partial void Ony2_RTChanging(double value);
    partial void Ony2_RTChanged();
    partial void Onthickness_RTChanging(int value);
    partial void Onthickness_RTChanged();
    partial void Oncolor_RTChanging(string value);
    partial void Oncolor_RTChanged();
    partial void Onconnector_x1_RTChanging(double value);
    partial void Onconnector_x1_RTChanged();
    partial void Onconnector_y1_RTChanging(double value);
    partial void Onconnector_y1_RTChanged();
    partial void Onconnector_x2_RTChanging(double value);
    partial void Onconnector_x2_RTChanged();
    partial void Onconnector_y2_RTChanging(double value);
    partial void Onconnector_y2_RTChanged();
    partial void Onconnector_hidden_RTChanging(bool value);
    partial void Onconnector_hidden_RTChanged();
    partial void Onrectangle_hiddenChanging(bool value);
    partial void Onrectangle_hiddenChanged();
    #endregion
		
		public RectangleTag()
		{
			this._dCupnote = default(EntityRef<dCupnote>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_RT", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_RT
		{
			get
			{
				return this._ID_RT;
			}
			set
			{
				if ((this._ID_RT != value))
				{
					this.OnID_RTChanging(value);
					this.SendPropertyChanging();
					this._ID_RT = value;
					this.SendPropertyChanged("ID_RT");
					this.OnID_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DCN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_DCN
		{
			get
			{
				return this._ID_DCN;
			}
			set
			{
				if ((this._ID_DCN != value))
				{
					if (this._dCupnote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DCNChanging(value);
					this.SendPropertyChanging();
					this._ID_DCN = value;
					this.SendPropertyChanged("ID_DCN");
					this.OnID_DCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note_RT", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Note_RT
		{
			get
			{
				return this._Note_RT;
			}
			set
			{
				if ((this._Note_RT != value))
				{
					this.OnNote_RTChanging(value);
					this.SendPropertyChanging();
					this._Note_RT = value;
					this.SendPropertyChanged("Note_RT");
					this.OnNote_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counter_RT", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int counter_RT
		{
			get
			{
				return this._counter_RT;
			}
			set
			{
				if ((this._counter_RT != value))
				{
					this.Oncounter_RTChanging(value);
					this.SendPropertyChanging();
					this._counter_RT = value;
					this.SendPropertyChanged("counter_RT");
					this.Oncounter_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x1_RT", DbType="Float NOT NULL")]
		public double x1_RT
		{
			get
			{
				return this._x1_RT;
			}
			set
			{
				if ((this._x1_RT != value))
				{
					this.Onx1_RTChanging(value);
					this.SendPropertyChanging();
					this._x1_RT = value;
					this.SendPropertyChanged("x1_RT");
					this.Onx1_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y1_RT", DbType="Float NOT NULL")]
		public double y1_RT
		{
			get
			{
				return this._y1_RT;
			}
			set
			{
				if ((this._y1_RT != value))
				{
					this.Ony1_RTChanging(value);
					this.SendPropertyChanging();
					this._y1_RT = value;
					this.SendPropertyChanged("y1_RT");
					this.Ony1_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x2_RT", DbType="Float NOT NULL")]
		public double x2_RT
		{
			get
			{
				return this._x2_RT;
			}
			set
			{
				if ((this._x2_RT != value))
				{
					this.Onx2_RTChanging(value);
					this.SendPropertyChanging();
					this._x2_RT = value;
					this.SendPropertyChanged("x2_RT");
					this.Onx2_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y2_RT", DbType="Float NOT NULL")]
		public double y2_RT
		{
			get
			{
				return this._y2_RT;
			}
			set
			{
				if ((this._y2_RT != value))
				{
					this.Ony2_RTChanging(value);
					this.SendPropertyChanging();
					this._y2_RT = value;
					this.SendPropertyChanged("y2_RT");
					this.Ony2_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thickness_RT", DbType="Int NOT NULL")]
		public int thickness_RT
		{
			get
			{
				return this._thickness_RT;
			}
			set
			{
				if ((this._thickness_RT != value))
				{
					this.Onthickness_RTChanging(value);
					this.SendPropertyChanging();
					this._thickness_RT = value;
					this.SendPropertyChanged("thickness_RT");
					this.Onthickness_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_RT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string color_RT
		{
			get
			{
				return this._color_RT;
			}
			set
			{
				if ((this._color_RT != value))
				{
					this.Oncolor_RTChanging(value);
					this.SendPropertyChanging();
					this._color_RT = value;
					this.SendPropertyChanged("color_RT");
					this.Oncolor_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_x1_RT", DbType="Float NOT NULL")]
		public double connector_x1_RT
		{
			get
			{
				return this._connector_x1_RT;
			}
			set
			{
				if ((this._connector_x1_RT != value))
				{
					this.Onconnector_x1_RTChanging(value);
					this.SendPropertyChanging();
					this._connector_x1_RT = value;
					this.SendPropertyChanged("connector_x1_RT");
					this.Onconnector_x1_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_y1_RT", DbType="Float NOT NULL")]
		public double connector_y1_RT
		{
			get
			{
				return this._connector_y1_RT;
			}
			set
			{
				if ((this._connector_y1_RT != value))
				{
					this.Onconnector_y1_RTChanging(value);
					this.SendPropertyChanging();
					this._connector_y1_RT = value;
					this.SendPropertyChanged("connector_y1_RT");
					this.Onconnector_y1_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_x2_RT", DbType="Float NOT NULL")]
		public double connector_x2_RT
		{
			get
			{
				return this._connector_x2_RT;
			}
			set
			{
				if ((this._connector_x2_RT != value))
				{
					this.Onconnector_x2_RTChanging(value);
					this.SendPropertyChanging();
					this._connector_x2_RT = value;
					this.SendPropertyChanged("connector_x2_RT");
					this.Onconnector_x2_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_y2_RT", DbType="Float NOT NULL")]
		public double connector_y2_RT
		{
			get
			{
				return this._connector_y2_RT;
			}
			set
			{
				if ((this._connector_y2_RT != value))
				{
					this.Onconnector_y2_RTChanging(value);
					this.SendPropertyChanging();
					this._connector_y2_RT = value;
					this.SendPropertyChanged("connector_y2_RT");
					this.Onconnector_y2_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_connector_hidden_RT", DbType="Bit NOT NULL")]
		public bool connector_hidden_RT
		{
			get
			{
				return this._connector_hidden_RT;
			}
			set
			{
				if ((this._connector_hidden_RT != value))
				{
					this.Onconnector_hidden_RTChanging(value);
					this.SendPropertyChanging();
					this._connector_hidden_RT = value;
					this.SendPropertyChanged("connector_hidden_RT");
					this.Onconnector_hidden_RTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rectangle_hidden", DbType="Bit NOT NULL")]
		public bool rectangle_hidden
		{
			get
			{
				return this._rectangle_hidden;
			}
			set
			{
				if ((this._rectangle_hidden != value))
				{
					this.Onrectangle_hiddenChanging(value);
					this.SendPropertyChanging();
					this._rectangle_hidden = value;
					this.SendPropertyChanged("rectangle_hidden");
					this.Onrectangle_hiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dCupnote_RectangleTag", Storage="_dCupnote", ThisKey="ID_DCN", OtherKey="ID_DCN", IsForeignKey=true)]
		public dCupnote dCupnote
		{
			get
			{
				return this._dCupnote.Entity;
			}
			set
			{
				dCupnote previousValue = this._dCupnote.Entity;
				if (((previousValue != value) 
							|| (this._dCupnote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dCupnote.Entity = null;
						previousValue.RectangleTags.Remove(this);
					}
					this._dCupnote.Entity = value;
					if ((value != null))
					{
						value.RectangleTags.Add(this);
						this._ID_DCN = value.ID_DCN;
					}
					else
					{
						this._ID_DCN = default(string);
					}
					this.SendPropertyChanged("dCupnote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
